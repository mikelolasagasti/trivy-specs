# Generated by go2rpm 1.6.0
%bcond_without check
%global debug_package %{nil}

# https://github.com/oras-project/oras-go
%global goipath         oras.land/oras-go
%global forgeurl        https://github.com/oras-project/oras-go
Version:                1.2.0

%gometa

%global common_description %{expand:
ORAS Go library.}

%global golicenses      LICENSE
%global godocs          examples CODE_OF_CONDUCT.md OWNERS.md README.md

Name:           %{goname}
Release:        %autorelease
Summary:        ORAS Go library

# Upstream license specification: Apache-2.0
License:        ASL 2.0
URL:            %{gourl}
Source0:        %{gosource}

%description
%{common_description}

%gopkg

%prep
%goprep

%generate_buildrequires
%go_generate_buildrequires

%install
%gopkginstall

%if %{with check}
%check
# FIXME
#/usr/share/gocode/src/github.com/docker/docker/registry/auth.go:144:51: cannot use challengeManager (variable of type "github.com/docker/distribution/registry/client/auth/challenge".Manager) as type "github.com/distribution/distribution/v3/registry/client/auth/challenge".Manager in argument to auth.NewAuthorizer:
#	"github.com/docker/distribution/registry/client/auth/challenge".Manager does not implement "github.com/distribution/distribution/v3/registry/client/auth/challenge".Manager (wrong type for GetChallenges method)
#		have GetChallenges(endpoint url.URL) ([]"github.com/docker/distribution/registry/client/auth/challenge".Challenge, error)
#		want GetChallenges(endpoint url.URL) ([]"github.com/distribution/distribution/v3/registry/client/auth/challenge".Challenge, error)
%gocheck -d pkg/auth/docker -d pkg/content
%endif

%gopkgfiles

%changelog
%autochangelog
